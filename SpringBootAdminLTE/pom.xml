<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example.springboot</groupId>
    <artifactId>SpringBootAdminLTE</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>SpringBootAdminLTE</name>
    <description>
        <![CDATA[An example project using SpringBoot and AdminLTE]]>
    </description>

    <!-- This package can be either jar or war -->
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>

        <!-- Tablesaw, A Java dataframe implementation.
        https://github.com/jtablesaw
        https://mvnrepository.com/artifact/tech.tablesaw/tablesaw-core 
        -->
        <tablesaw.version>0.41.0</tablesaw.version>
    </properties>

    <dependencies>
        <!-- Spring Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
        </dependency>

        <!-- DB Access -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring Tools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity5</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>


        <!-- Apache Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>

        <!-- ECharts   https://gitee.com/free/ECharts
        https://mvnrepository.com/artifact/com.github.abel533/ECharts
        -->
        <dependency>
            <groupId>com.github.abel533</groupId>
            <artifactId>ECharts</artifactId>
            <version>3.0.0.6</version>
        </dependency>

        <!-- Gson, required by ECharts.
        https://mvnrepository.com/artifact/com.google.code.gson/gson
        -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <!-- Tablesaw -->
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-core</artifactId>
            <version>${tablesaw.version}</version>
        </dependency>
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-beakerx</artifactId>
            <version>${tablesaw.version}</version>
        </dependency>
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-excel</artifactId>
            <version>${tablesaw.version}</version>
        </dependency>
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-html</artifactId>
            <version>${tablesaw.version}</version>
        </dependency>
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-json</artifactId>
            <version>${tablesaw.version}</version>
        </dependency>
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-jsplot</artifactId>
            <version>${tablesaw.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Apache Maven Site Plugin
            The Site Plugin is used to generate a site for the project. The generated site also
            includes the project's reports that were configured in the POM.
            https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.9.1</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!-- Apache Maven Project Info Reports Plugin
            The Maven Project Info Reports plugin is used to generate reports information about the project.
            Normally, we take off the dependency report to save time.
            https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-project-info-reports-plugin
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>

            <!-- Apache Maven Javadoc Plugin
            The Javadoc Plugin uses the Javadoc tool to generate javadocs for the specified project.
            https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.3.1</version>
            </plugin>

            <!-- Maven JXR Plugin
            The JXR Plugin produces a cross-reference of the project's sources.
            https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jxr-plugin
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.1.1</version>
            </plugin>

            <!-- Apache Maven PMD Plugin
            The PMD Plugin allows you to automatically run the PMD code analysis tool on your project's
            source code and generate a site report with its results.
            It also supports the separate Copy/Paste Detector tool (or CPD) distributed with PMD.
            https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-pmd-plugin
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.15.0</version>
                <configuration>
                    <skipEmptyReport>false</skipEmptyReport>
                </configuration>
            </plugin>

            <!-- SpotBugs Maven Plugin
            SpotBugs looks for bugs in Java programs. It is based on the concept of bug patterns.
            https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-maven-plugin
            -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.4.2.1</version>
            </plugin>

            <!-- Maven Surefire Report Plugin
            The Surefire Report Plugin parses the generated TEST-*.xml files under ${basedir}/target/surefire-reports
            and renders them using DOXIA, which creates the web interface version of the test results.
            https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-report-plugin

            This Plugin has these goals:
                mvn surefire-report:report       #generate Surefire unit test report, output to: target/site/surefire-report.html
                mvn surefire-report:report-only  #generate a unit test report without running all the unit tests again.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
        </plugins>
    </reporting>
</project>
